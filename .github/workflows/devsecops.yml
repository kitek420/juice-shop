name: Mini Projekt DevSecOps

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  sca-scan:
    name: SCA
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run SCA
      run: |
        npm audit --audit-level moderate > sca-report.txt
        npm outdated >> sca-report.txt
        npm ls --depth=1 >> sca-report.txt

    - name: Upload SCA report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: sca-security-report
        path: sca-report.txt

  sast-scan:
    name: SAST
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run SAST
      uses: returntocorp/semgrep-action@v1
      with:
        config: auto
        generateSarif: true
      continue-on-error: true

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Secrets Scan
      uses: gitleaks/gitleaks-action@v2
      continue-on-error: true
      with:
        scan-dir: .
        report-format: sarif
        report-path: gitleaks.sarif

    - name: Upload SecretsScan report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: secretscan-gitleaks-report
        path: gitleaks.sarif


  everything-combined-lets-go:
    name: Build App, Trivy Scan, and DAST
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t juice-shop:${{ github.sha }} .
        docker tag juice-shop:${{ github.sha }} juice-shop:latest

    - name: Run Trivy scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'juice-shop:latest'
        format: 'table'
        severity: 'HIGH,CRITICAL'
        output: 'trivy-report.txt'
        exit-code: '0'
    
    - name: Upload Trivy report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-image-report
        path: trivy-report.txt

    - name: Create Docker network
      run: docker network create zap-net

    - name: Run Juice Shop container
      run: |
        docker run -d --network zap-net --name juice-shop-zap -p 3000:3000 juice-shop:latest
        for i in {1..30}; do
          curl -s http://localhost:3000 | grep -q "OWASP Juice Shop" && break
          sleep 5
        done

    - name: Run DAST scan
      run: |
        docker run --rm --network zap-net \
          -v /tmp:/zap/wrk/:rw \
          ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
          -t http://juice-shop-zap:3000 \
          -J report_json.json -w report_md.md -r report_html.html -I

    - name: Copy ZAP reports to workspace
      run: |
        cp /tmp/report_* . || true

    - name: Upload ZAP reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: zap-reports
        path: |
          report_json.json
          report_md.md
          report_html.html

    - name: Cleanup containers and network
      if: always()
      run: |
        docker stop juice-shop-zap
        docker rm juice-shop-zap
        docker network rm zap-net

