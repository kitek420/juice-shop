name: Mini Projekt DevSecOps

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  sca-scan:
    name: SCA
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run SCA
      run: |
        npm audit --audit-level moderate | tee sca-report.txt || true
        echo "" | tee -a sca-report.txt
        npm outdated | tee -a sca-report.txt || true
        echo "" | tee -a sca-report.txt
        npm ls --depth=1 | tee -a sca-report.txt || true

    - name: Upload SCA report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: sca-security-report
        path: sca-report.txt

  sast-scan:
    name: SAST 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run SAST
      uses: returntocorp/semgrep-action@v1
      with:
        config: auto
        generateSarif: true
      continue-on-error: true

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Secrets Scan
      uses: gitleaks/gitleaks-action@v2
      continue-on-error: true
      with:
        scan-dir: .
        report-format: sarif
        report-path: gitleaks.sarif

    - name: Upload SecretsScan report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: secretscan-gitleaks-report
        path: gitleaks.sarif

  docker-build-and-run:
    name: Build and Run Docker App
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t juice-shop:${{ github.sha }} .
        docker tag juice-shop:${{ github.sha }} juice-shop:latest

    - name: Run Docker container
      run: |
        docker run -d -p 3000:3000 --name juice-shop-zap juice-shop:latest
        for i in {1..30}; do
          if curl -s http://localhost:3000 | grep -q "OWASP Juice Shop"; then
            exit 0
          fi
          sleep 5
        done
        exit 1

  dast-zap-scan:
    name: DAST
    runs-on: ubuntu-latest
    needs: docker-build-and-run

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run OWASP ZAP Scan
      id: zap-scan
      uses: zaproxy/action-baseline@v0.9.0
      with:
        target: "http://localhost:3000"
        cmd_options: "-I -J report_json.json -w report_md.md -r report_html.html"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload ZAP reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: zap-reports
        path: |
          report_json.json
          report_md.md
          report_html.html

    - name: Stop and remove Juice Shop container
      if: always()
      run: |
        docker stop juice-shop-zap
        docker rm juice-shop-zap
